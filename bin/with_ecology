#!/usr/bin/env ruby

require "rubygems"
require "ecology"
require "multi_json"

if ARGV.size == 0
  $stderr.puts <<USAGE
Usage:  with_ecology [-simple] <ecology-name>.ecology[.erb] <binary> [<args>]

Use "-simple" to exclude ECOLOGY_property_LENGTH and _TYPE fields.
USAGE
  exit -1
end

@exclude_fields = false

ARGS = ["-simple"]

arg = ARGV.shift

while ARGS.include?(arg)
  if arg == "-simple"
    @exclude_fields = true
    arg = ARGV.shift
  end
end

arg = ARGV.shift if arg == "--"

Ecology.read(arg)

def export_prefix_key_value(prefix, key, value)
  env_var_name = "#{prefix}#{key}"

  type = case value
  when Fixnum
    "int"
  when String
    "string"
  when Float
    "float"
  when TrueClass
    "bool"
  when FalseClass
    "bool"
  when NilClass
    "null"
  else
    "unknown"
  end

  ENV[env_var_name] = value.to_s

  unless @exclude_fields
    ENV[env_var_name + "_TYPE"] = type
    ENV[env_var_name + "_LENGTH"] = value.to_s.length.to_s
  end
end

def export_properties(data, prefix)
  data.each do |key, value|
    if value.is_a?(Hash)
      export_properties(value, "#{prefix}#{key}_")
    elsif value.is_a?(Array)
      export_prefix_key_value prefix, key, MultiJSON.encode(value)
    else
      export_prefix_key_value prefix, key, value
    end
  end
end

export_properties(Ecology.data, "ECOLOGY_")

exec ARGV.join(" ")
